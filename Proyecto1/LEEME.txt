Proyecto 1 de CI5437
Hecho por: Fabio Castro 10-10132
		       María Victoria Jorge 11-10495
		       Jorge Marcano 11-10566

-> Instrucciones:
	Para compilar cualquiera de los algoritmos debe hacerse make nombre_del_problema.algoritmo

  Para ejecutar los algoritmos informados depende del problema :
     - Para N-puzzle :
        ./nombre_del_problema1.algoritmo archivo_entrada nombre_del_problema2 [pdb|manhattan] tipo_de_pdb

     - Para el resto de los problemas :
        ./nombre_del_problema1.algoritmo archivo_entrada nombre_del_problema2 

     Donde :
        nombre_del_problema1 es : 15puzzle1,15puzzle2,24puzzle1,24puzzle2,Hanoi(12,14,16,18),topSpin(12,14,16,17),
                                  rubik2Sticker,  rubik3Sticker.
        archivo_entrada es : Un archivo de texto con los estados sobre los cuales se ejecutará el algoritmo.
        nombre_del_problema2 es : 15puzzle1,15puzzle2,24puzzle1,24puzzle2,hanoi(12,14,16,18),topSpin(12,14,16,17),
                                  rubik2,rubik3.
        pdb/manhattan es : Para los N-puzzle decide si se utilizara una pdb aditiva o manhattan como heurística
        tipo_de_pdb es : Para 15puzzle -> 555 o 663, para 24puzzle -> 55554

  En el caso de los algoritmos ciegos, simplemente se hace ./nombre_del_problema archivo_entrada

-> El directorio src contiene los archivos correspondientes a todos los algoritmos de búsqueda,
   la representación de la clase nodo utilizada en los algoritmos iterativos (se encuentra en
   el directorio /src/extras), la heurística Manhattan para los problemas de 15-puzzle y 24-puzzle
   (en src/heuristicas) y la funcion para podar los duplicados obvios en a* e ida* para los problemas
   de rubik (en /src/extras).

-> En problemas están los archivos PSVN de cada una de las versiones de los problemas a resolver.

-> El directorio Salidas Arboles contiene las tablas para cada problema donde se reporta el número de 
   estados visitados a cada profundidad en el árbol de búsqueda a partir del estado goal, hasta la 
   profundidad alcanzada en 15 minutos de ejecución, y el factor de ramificación en cada nivel.
   En Sin Podar se encuentran los reportes sin realizar ningún tipo de podado de duplicados y en
   Podado Parcial están las tablas correspondientes a los recorridos utilizando podado de duplicados
   de padres. Los algoritmos utilizados para la realización de estas tablas se encuentran en el directorio src
   (arbolbusqueda.cpp y arbolpodado.cpp).

-> En PDBs se encuentran los distintos PDBs para cada problema. Cada problema tiene una carpeta con su nombre,
   donde se encuentran los PDBs generados para cada uno. Para los problemas de Hanoi y TopSpin se utilizaron dos PDBs
   y se uso como heurística el máximo entre ellas, en el caso de N-puzzle, dentro hay distintas carpetas con 
   los PDBs asociados a cada una de las PDBs aditivas para usar como heurística.

-> Nota 1 : Los PDBs para los problemas de Rubik no se pudieron generar. Intentamos en distintas computadoras 
            con 4GB y 8GB de RAM y diversos procesadores, usando distintas combinaciones de proyecciones,pero
            a pesar de esto no logramos crear los PDBs. Sin embargo, los algoritmos están en capacidad de funcionar
            en caso de que el usuario tenga PDBs a la mano y los introduzca en la carpeta de PDBs de Rubik2 o Rubik3
            siempre y cuando se respete el formato indicado en la Nota 2.

-> Nota 2 : El proyecto se corrió con los PDBs que se encuentran en la carpeta de PDBs. A pesar de esto, el usuario
            puede utilizar sus propios PDBs para correr el programa siempre y cuando cumpla con el siguiente formato :
            - Los nombres de los archivos con abstracciones adentro deben ser de la forma pdbX.abst donde X es un número
              que va aumentando de 1 en 1 segun el numero de PDBs a usar para el problema. (Si se usan 3 pdbs,los .abst
              deben ser pdb1.abst, pdb2.abst y pdb3.abst).
            - Los nombres de los archivos con los PDBs en forma de state_map en formato binario deben tener la forma
              pdbY.txt donde Y es igual a la abstracción X con la que esta asociado el PDB.
            - Cada problema tiene un numero fijo de PDBs que se pueden usar :
               *15puzzle1 y 15puzzle2 pueden usar 2 o 3 PDBs aditivas dependiendo de la carpeta en la que se guarden.
               *24puzzle1 y 24puzzle2 pueden usar 4 o 5 PDBs aditivas dependiendo de la carpeta en la que se guarden.
               *HanoiXX y TopSpinXX usan siempre 2 PDBs y se utiliza el máximo entre las dos como heurística.
               *Rubik2 usa 2 PDBs y utiliza el máximo entre las dos como heurística.
               *Rubik3 usa 3 PDBs y utiliza el máximo de las tres como heurística.
